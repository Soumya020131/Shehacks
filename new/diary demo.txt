from tkinter import*
from tkinter import messagebox

import os
import time

'''import matplotlib as mpl
if os.environ.get('DISPLAY','') == '':
    mpl.use('Agg')'''

'''import PySimpleGUI as sg
if os.environ.get('DISPLAY','') == '':
	os.environ.__setitem__('DISPLAY',':0.0')'''


# These modules are user defined python modules.Each module has its own function.


import write_func
import read_func
import edit_func



def directory():
    '''This function sets the directory to the defined path.This path is where all your files will be saved.'''
    path="C:/Users/SOUMYA/new"
    os.chdir(path)

directory()
'''class login_interface(Frame):
This class contains the login section of the app.The user has to enter a password to access the main application.
	def __init__(self,master=None):
		#initiating the frame
		Frame.__init__(self,master)
		self.master=master
		self.security()
		#function that holds the widgets of login window
	def security(self):
		self.master.title("LOGIN")
		self.pack(fill=BOTH, expand=1)
		lbl = Label(self, text="PASSWORD").grid(column=0, row=0)
		# Entry to get a input from the user
		self.pwrd = Entry(self,show="*")
		self.pwrd.focus_set()
		self.pwrd.grid(column=1, row=0)
		#login button binded to a function named login
		login = Button(self, text="login", width=20,command=self.login)
		login.grid(column=1, row=2)
	#def login(self):

	   this function which is binded to the "login" Button checks if the 
		password given by the user.If it is correct it directs the user to main application
		#if the password given is correct the following get executed

		if self.pwrd.get()=="#Your_password":
			#destroys the present login window
			a.destroy()
			#initiates the main application
			b=Tk()
			b.geometry("500x500")
			app_b=journal(b)  #journal is a class mention below
			app_b.mainloop()  #mainloop for the program should run until we close
			#Note  this is the mainloop of our main application
			#if the given password is wrong then an error is shown
		else:
			messagebox.showinfo("ERROR ","retry wrong password")'''


def register():
    global register_screen
    register_screen = Toplevel(main_screen)
    register_screen.title("Register")
    register_screen.geometry("300x250")

    global username
    global password
    global username_entry
    global password_entry
    username = StringVar()
    password = StringVar()
    Label(register_screen, text="Please enter details below", bg="purple").pack()
    Label(register_screen, text="").pack()
    username_lable =Label(register_screen, text="Username * ")
    username_lable.pack()
    username_entry = Entry(register_screen, textvariable=username)
    username_entry.pack()
    password_lable = Label(register_screen, text="Password * ")
    password_lable.pack()
    password_entry = Entry(register_screen, textvariable=password, show='*')
    password_entry.pack()
    Label(register_screen, text="").pack()
    Button(register_screen, text="Register", width=10, height=1, bg="blue", command=register_user).pack()
    # Designing window for login


def login():
    global login_screen
    login_screen = Toplevel(main_screen)
    login_screen.title("Login")
    login_screen.geometry("300x250")
    Label(login_screen, text="Please enter details below to login").pack()
    Label(login_screen, text="").pack()

    global username_verify
    global password_verify
    username_verify = StringVar()
    password_verify = StringVar()

    global username_login_entry
    global password_login_entry
    Label(login_screen, text="Username * ").pack()
    username_login_entry = Entry(login_screen, textvariable=username_verify)
    username_login_entry.pack()
    Label(login_screen, text="").pack()
    Label(login_screen, text="Password * ").pack()
    password_login_entry = Entry(
        login_screen, textvariable=password_verify, show='*')
    password_login_entry.pack()
    Label(login_screen, text="").pack()
    Button(login_screen, text="Login", width=10, height=1, command=login_verify).pack()
    # Implementing event on register button


def register_user():
    username_info = username.get()
    password_info = password.get()
    file = open(username_info, "w")
    file.write(username_info + "\n")
    file.write(password_info)
    file.close()
    username_entry.delete(0, END)
    password_entry.delete(0, END)
    Label(register_screen, text="Registration Success", fg="green", font=("calibri", 11)).pack()
    # Implementing event on login button


def login_verify():
    username1 = username_verify.get()
    password1 = password_verify.get()
    username_login_entry.delete(0, END)
    password_login_entry.delete(0, END)
    list_of_files = os.listdir()
    if username1 in list_of_files:
        file1 = open(username1, "r")
        verify = file1.read().splitlines()
        if password1 in verify:
            login_success()
        else:
            password_not_recognised()
    else:
        user_not_found()
    # Designing popup for login success


def login_success():
    global login_success_screen
    login_success_screen = Toplevel(login_screen)
    login_success_screen.title("Success")
    login_success_screen.geometry("150x100")
    Label(login_success_screen, text="Login Success").pack()
    Button(login_success_screen, text="OK", command=delete_login_success).pack()
# Designing popup for login invalid password


def password_not_recognised():
    global password_not_recog_screen
    password_not_recog_screen = Toplevel(login_screen)
    password_not_recog_screen.title("Success")
    password_not_recog_screen.geometry("150x100")
    Label(password_not_recog_screen, text="Invalid Password ").pack()
    Button(password_not_recog_screen, text="OK", command=delete_password_not_recognised).pack()
# Designing popup for user not found


def user_not_found():
    global user_not_found_screen
    user_not_found_screen = Toplevel(login_screen)
    user_not_found_screen.title("Success")
    user_not_found_screen.geometry("150x100")
    Label(user_not_found_screen, text="User Not Found").pack()
    Button(user_not_found_screen, text="OK", command=delete_user_not_found_screen).pack()
    # Deleting popups


def delete_login_success():
    login_success_screen.destroy()
    journal = Tk()
    journal.geometry("500x500")
    app_journal = journal(journal)
    app_journal.mainloop()


def delete_password_not_recognised():
    password_not_recog_screen.destroy()


def delete_user_not_found_screen():
    user_not_found_screen.destroy()
    # Designing Main(first) window


def main_account_screen():
    global main_screen
    main_screen = Tk()
    main_screen.geometry("300x250")
    main_screen.title("Account Login")
    Label(text="Select Your Choice", bg="blue", width="300",height="2", font=("Calibri", 13)).pack()
    Label(text="").pack()
    Button(text="Login", height="2", width="30", command=login).pack()
    Label(text="").pack()
    Button(text="Register", height="2", width="30", command=register).pack()
    main_screen.mainloop()


class journal(Frame):
    '''this class contains the frame and widgets which make up the main application
    Main application contains three buttons Write,read,Edit respectively.'''
    # initating frame of window

    def __init__(self, master=None):
        Frame.__init__(self, master)
        self.master = master
        self.master.title("DIARY")
        self.pack(fill=BOTH, expand=1)
        # write button binded to write function.
        write_button = Button(self, text="Write", width=100,
                              height=10, command=self.write)
        write_button.pack()
        # Read button binded to read function.
        read_button = Button(self, text="Read", width=100,
                             height=10, command=self.read)
        read_button.pack()
        # Edit button binded to edit function.
        edit_button = Button(self, text="Edit", width=100,
                             height=10, command=self.edit)
        edit_button.pack()

    def write(self):
        '''this function calls the function defined in the "write_func" module.This module is an user defined module.
        This module enables user to write their thoughts and save it in the respective directory.'''
        a = Tk()
        B = write_func.window()
        B.mainloop()

    def read(self):
        '''This function calls the function defined in the "read_func" module.This module is an user defined module.
        This module enables user to read the files they have saved previously.'''
        a = Tk()
        B = read_func.window()
        B.mainloop()

    def edit(self):
        '''this function calls the function defined in the "edit_func" module.This module is an user defined module.
        This module enables the user to revisit and edit the files they have saved previously.'''
        a = Tk()
        B = edit_func.window()
        B.mainloop()


'''Creating the instance of the login class and running the program'''
main_account_screen()



2nd


from tkinter import*
from tkinter import messagebox
import os
import time

#These modules are user defined python modules.Each module has its own function.
import write_func
import read_func
import edit_func

def directory():
    '''This function sets the directory to the defined path.This path 
    is where all your files will be saved.'''
    path="C:/Users/SOUMYA/new"
    os.chdir(path)
directory()

class login_interface(Frame):
    '''This class contains the login section of the app.The user have 
    to enter a password to access the main application.'''
    def __init__(self,master=None):
        #initiating the frame
        Frame.__init__(self,master)
        self.master=master
        self.security()

    #function that holds the widgets of login window
    def security(self):
        self.master.title("LOGIN")
        self.pack(fill=BOTH, expand=1)
        lbl = Label(self, text="PASSWORD").grid(column=0, row=0)

        # Entry to get a input from the user
        self.pwrd = Entry(self,show="*")
        self.pwrd.focus_set()
        self.pwrd.grid(column=1, row=0)

        #login button binded to a function named login
        login = Button(self, text="login", width=20,command=self.login)
        login.grid(column=1, row=2)


    def login(self):
        '''this function which is binded to the "login" Button checks if the
        password given by the user.If it is correct it directs the user to main application'''

        #if the password given is correct the following get executed
        if self.pwrd.get()=="soumya":
            #destroys the present login window
            a.destroy()

            #initiates the main application
            b=Tk()
            b.geometry("500x500")
            app_b=journal(b)  #journal is a class mention bellow
            app_b.mainloop()  #mainloop for the program should run until we close
                              #Note  this is the mainloop of our main application

        #if the given password is wrong then an error is shown
        else:
            messagebox.showinfo("ERROR ","retry wrong password")

class journal(Frame):
    '''this class contains the frame and widgets which make up the main application.
    Main application contains three buttons Write,read,Edit respectively.'''

    #initating frame of window
    def __init__(self,master=None):
        Frame.__init__(self,master)
        self.master=master

        self.master.title("DIARY")
        self.pack(fill=BOTH, expand=1)

        #write button binded to write function.
        write_button=Button(self,text="Write",width=100,height=10,command=self.write)
        write_button.pack()

        #Read button binded to read function.
        read_button=Button(self,text="Read",width=100,height=10,command=self.read)
        read_button.pack()

        #Edit button binded to edit function.
        edit_button=Button(self,text="Edit",width=100,height=10,command=self.edit)
        edit_button.pack()

    def write(self):
        '''this function calls the function defined in the "write_func" module.This module is an user defined module.
        This module enables user to write their thoughts and save it in the respective directory.'''

        a=Tk()
        B=write_func.window(a)
        B.mainloop()

    def read(self):
        '''This function calls the function defined in the "read_func" module.This module is an user defined module.
        This module enables user to read the files they have saved previously.'''

        a=Tk()
        B=read_func.window(a)
        B.mainloop()        

    def edit(self):
        '''this function calls the function defined in the "edit_func" module.This module is an user defined module.
        This module enables the user to revisit and edit the files they have saved previously.'''

        a=Tk()
        B=edit_func.window(a)
        B.mainloop()


'''Creating the instance of the login class and running the program'''
a=Tk()
a.geometry("250x50")
app=login_interface(a)
app.mainloop()